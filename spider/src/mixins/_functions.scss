// Get setting from grid settings
@function grid($param) {

  @if not map-has-key($grid, $param) {
    @warn "No param found for `#{$param}` in $grid settings. Property omitted.";
  }

  @return map-get($grid, $param);
}

// Set column width
@function span($index, $columns: grid(columns), $container-width: grid(container-width)) {
  @return $index / $columns * 100%;
}

// Get next breakpoint by name of current
@function breakpoint-next($name, $type: 'value', $breakpoints: $grid-breakpoints, $breakpoints-names: map-keys($breakpoints), $breakpoints-values: map-values($breakpoints) ) {
  $result: 0;
  $i: index($breakpoints-names, $name);
  @if ($type == 'name') {
    @if ($i < length($breakpoints)) {
      $result: nth($breakpoints-names, $i + 1)
    }
  } @else if ($type == 'value') {
    @if ($i < length($breakpoints)) {
      $result: nth($breakpoints-values, $i + 1)
    }
  }
  @if ($result == 0 or $result == '') {
    @return "No breakpoint found for `#{$name}` in $breacpoints map. Property omitted.";
  } @else {
    @return $result;
  }
}

// Get prev breakpoint by name of current
@function breakpoint-prev($name, $type: 'value', $breakpoints: $grid-breakpoints, $breakpoints-names: map-keys($breakpoints), $breakpoints-values: map-values($breakpoints) ) {
  $result: 0;
  $i: index($breakpoints-names, $name);
  @if ($type == 'name') {
    @if ($i <= length($breakpoints) and $i > 1) {
      $result: nth($breakpoints-names, $i - 1)
    }
  } @else if ($type == 'value') {
    @if ($i <= length($breakpoints) and $i > 1) {
      $result: nth($breakpoints-values, $i - 1)
    }
  }
  @if ($result == 0 or $result == '') {
    @return "No breakpoint found for `#{$name}` in $breacpoints map. Property omitted.";
  } @else {
    @return $result;
  }
}

// Get last breakpoint from map
@function breakpoint-first($type: 'value', $breakpoints: $grid-breakpoints, $breakpoints-names: map-keys($breakpoints), $breakpoint-values: map-values($breakpoints) ) {
  @if ($type == 'name') {
    @return nth($breakpoints-names, 1);
  } @else if ($type == 'value') {
    @return nth($breakpoint-values, 1);
  }
}

// Get first breakpoint from map
@function breakpoint-last($type: 'value', $breakpoints: $grid-breakpoints, $breakpoints-names: map-keys($breakpoints), $breakpoint-values: map-values($breakpoints) ) {
  @if ($type == 'name') {
    @return nth($breakpoints-names, length($breakpoints));
  } @else if ($type == 'value') {
    @return nth($breakpoint-values, length($breakpoints));
  }
}