// Flex container
@mixin make-flex-container($container-width: grid(container-width), $container-type: grid(container-type)) {
  .container {
    @include gutter();
    margin-left: auto;
    margin-right: auto;

    @if ($container-width != 'auto') {

      @if ($container-type == 'static') {
        width: $container-width;
      } @else {
        max-width: $container-width;
      }
    }
  }
}

// Flex rows and cols
@mixin make-flex-row() {

  .row {
    display: flex;
    flex: 1 1 auto;
    flex-direction: row;
    flex-wrap: wrap;
    @include gutter(-(grid(gutter-width)), 'outside');

    &-reverse {
      display: flex;
      flex: 1 1 auto;
      flex-direction: row-reverse;
      flex-wrap: wrap;
      @include gutter(-(grid(gutter-width)), 'outside');
    }
  }
}

@mixin make-flex-col() {

  .col {
    display: flex;
    flex: 0 1 auto;
    flex-direction: column;
    flex-wrap: wrap;
    @include gutter(-(grid(gutter-width)), 'outside');

    &-reverse {
      display: flex;
      flex: 0 1 auto;
      flex-direction: column-reverse;
      flex-wrap: wrap;
      @include gutter(-(grid(gutter-width)), 'outside');
    }
  }
}

// Flex cell
@mixin utility-flex-cell($breakpoint-name: '', $postfix: '', $columns: grid(columns)) {

  @if ($breakpoint-name != '') {
    $breakpoint-name: '-'+$breakpoint-name;
  }

  @if ($postfix != '') {
    $postfix: '-'+$postfix;
  }

  @for $index from 1 through $columns {
    .cell-#{$index}#{$breakpoint-name}#{$postfix} {
      max-width: span($index);
      flex-basis: span($index);
    }
  }
  .cell-fifth#{$breakpoint-name}#{$postfix} {
    max-width: 20%;
    flex-basis: 20%;
  }
}

@mixin make-flex-cell-preset() {
  [class*='cell-'] {
    @include gutter();
  }
}

@mixin make-flex-cell($breakpoints: $grid-breakpoints, $columns: grid(columns)) {

  @include utility-flex-cell();

  @each $breakpoint-name, $breakpoint-value in $breakpoints {

    @if ($breakpoint-name != breakpoint-last('name')) {

      @include media-max($breakpoint-value) {
        @include utility-flex-cell($breakpoint-name);
      }

      @include media-between(breakpoint-next($breakpoint-name, 'name'), $breakpoint-value) {
        @include utility-flex-cell($breakpoint-name, 'only');
      }

    } @else if ($breakpoint-name == breakpoint-last('name')) {

      @include media-max($breakpoint-value) {
        @include utility-flex-cell($breakpoint-name);
      }
    }
  }
}

// Flex aligns
@mixin utility-flex-aligns($breakpoint-name: '', $postfix: '', $columns: grid(columns)) {

  @if ($breakpoint-name != '') {
    $breakpoint-name: '-'+$breakpoint-name;
  }

  @if ($postfix != '') {
    $postfix: '-'+$postfix;
  }

  .flex-start#{$breakpoint-name}#{$postfix} {
    justify-content: flex-start;
    text-align: start;
  }

  .flex-center#{$breakpoint-name}#{$postfix} {
    justify-content: center;
    text-align: center;
  }

  .flex-end#{$breakpoint-name}#{$postfix} {
    justify-content: flex-end;
    text-align: end;
  }

  .flex-top#{$breakpoint-name}#{$postfix} {
    align-items: flex-start;
  }

  .flex-middle#{$breakpoint-name}#{$postfix} {
    align-items: center;
  }

  .flex-bottom#{$breakpoint-name}#{$postfix} {
    align-items: flex-end;
  }

  .flex-around#{$breakpoint-name}#{$postfix} {
    justify-content: space-around;
  }

  .flex-between#{$breakpoint-name}#{$postfix} {
    justify-content: space-between;
  }

  .flex-first#{$breakpoint-name}#{$postfix} {
    order: -1;
  }

  .flex-last#{$breakpoint-name}#{$postfix} {
    order: 1;
  }
}

@mixin make-flex-aligns($breakpoints: $grid-breakpoints, $columns: grid(columns)) {

  @include utility-flex-aligns();

  @each $breakpoint-name, $breakpoint-value in $breakpoints {

    @if ($breakpoint-name != breakpoint-last('name')) {

      @include media-max($breakpoint-value) {
        @include utility-flex-aligns($breakpoint-name);
      }

      @include media-between(breakpoint-next($breakpoint-name, 'name'), $breakpoint-value) {
        @include utility-flex-aligns($breakpoint-name, 'only');
      }

    } @else if ($breakpoint-name == breakpoint-last('name')) {

      @include media-max($breakpoint-value) {
        @include utility-flex-aligns($breakpoint-name);
      }
    }
  }
}